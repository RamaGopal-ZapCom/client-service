plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'com.diffplug.spotless' version '6.19.0' // âœ… Spotless plugin added
}

group = 'com.zapcom'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "2022.0.5") // Compatible with Spring Boot 3.0.4
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	//implementation 'org.postgresql:postgresql:42.6.0'

	//implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	//implementation("io.springfox:springfox-swagger2:2.6.1")
	//implementation("io.springfox:springfox-swagger-ui:2.6.1")

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

spotless {
	java {
		googleJavaFormat() // Or you can use eclipse() or prettierJava()

		// Remove unused imports
		removeUnusedImports()

		// Refuse wildcard imports
		custom 'No wildcard imports', { str ->
			if (str.contains('import ')) {
				def lines = str.readLines()
				def invalid = lines.findAll { it =~ /import\s+.*\.\*\s*;/ }
				if (!invalid.isEmpty()) {
					throw new GradleException("Wildcard imports found: \n" + invalid.join("\n"))
				}
			}
			return str
		}

		// Target source files
		target 'src/**/*.java'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
